# Generated by Django 5.2.5 on 2025-08-28 02:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(editable=False, max_length=32, unique=True, verbose_name='用户ID')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号码')),
                ('user_type', models.CharField(choices=[('enterprise', '企业用户'), ('individual', '个人用户')], max_length=20, verbose_name='用户类型')),
                ('real_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='真实姓名')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像')),
                ('status', models.CharField(choices=[('active', '正常'), ('inactive', '未激活'), ('pending_review', '待审核'), ('banned', '已封禁')], default='pending_review', max_length=20, verbose_name='用户状态')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='最后登录IP')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'tx_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('enterprise_id', models.CharField(editable=False, max_length=32, primary_key=True, serialize=False, verbose_name='企业ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='企业名称')),
                ('company_type', models.CharField(choices=[('manufacturer', '生产制造企业'), ('constructor', '施工安装企业'), ('owner', '工程甲方企业'), ('supplier', '供应商企业')], max_length=20, verbose_name='企业类型')),
                ('business_license', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='营业执照号')),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True, verbose_name='联系人')),
                ('contact_phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='联系电话')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='联系邮箱')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='企业地址')),
                ('province', models.CharField(blank=True, max_length=20, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=20, null=True, verbose_name='城市')),
                ('district', models.CharField(blank=True, max_length=20, null=True, verbose_name='区县')),
                ('business_scope', models.TextField(blank=True, null=True, verbose_name='经营范围')),
                ('registered_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='注册资本')),
                ('established_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='成立年份')),
                ('annual_output', models.CharField(blank=True, max_length=100, null=True, verbose_name='年产量')),
                ('employee_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='员工数量')),
                ('certification_status', models.CharField(choices=[('verified', '已认证'), ('pending', '待认证'), ('rejected', '认证失败')], default='pending', max_length=20, verbose_name='认证状态')),
                ('rating', models.CharField(blank=True, choices=[('1star', '一星'), ('2star', '二星'), ('3star', '三星'), ('4star', '四星'), ('5star', '五星')], max_length=10, null=True, verbose_name='企业评级')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enterprise', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '企业信息',
                'verbose_name_plural': '企业信息',
                'db_table': 'tx_enterprises',
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('permission_id', models.CharField(editable=False, max_length=32, primary_key=True, serialize=False, verbose_name='权限ID')),
                ('permission_code', models.CharField(max_length=50, verbose_name='权限代码')),
                ('permission_name', models.CharField(max_length=100, verbose_name='权限名称')),
                ('module_name', models.CharField(max_length=50, verbose_name='所属模块')),
                ('granted_at', models.DateTimeField(auto_now_add=True, verbose_name='授权时间')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='过期时间')),
                ('granted_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='授权人ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_permissions', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户权限',
                'verbose_name_plural': '用户权限',
                'db_table': 'tx_user_permissions',
                'unique_together': {('user', 'permission_code')},
            },
        ),
    ]
